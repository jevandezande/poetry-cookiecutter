[tool.poetry]
name = "{{cookiecutter.package_name}}"
version = "0.1.0"
description = "{{cookiecutter.project_name}}"
authors = ["{{cookiecutter.author_name}}"]
keywords = []
license = "{{cookiecutter.license}}"
readme = "README.md"
repository = "{{cookiecutter.project_url}}"

[tool.poetry.dependencies]
python = "^{python_version}"
{poetry_dependencies}

[tool.poetry.group.dev.dependencies]
mypy = "*"
pre-commit = "*"
ruff = ">=0.2.0"
{poetry_dev_dependencies}

[tool.poetry.group.test.dependencies]
pytest = "*"
pytest-cov = "*"

[tool.poetry.scripts]

[tool.ruff]
line-length = {{cookiecutter.line_length}}

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
]

[tool.mypy]
files = ["{{cookiecutter.package_name}}", "tests"]
strict = true
pretty = true

[tool.pytest.ini_options]
testpaths = ["tests", "{{cookiecutter.package_name}}"]
addopts = "--doctest-modules"
doctest_optionflags = "NORMALIZE_WHITESPACE"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
